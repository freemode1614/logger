{"version":3,"sources":["../src/index.ts"],"names":["chalk"],"mappings":"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","file":"index.cjs","sourcesContent":["import chalk from \"chalk\";\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport type DebugLevel = \"trace\" | \"debug\" | \"info\" | \"warn\" | \"error\";\n\ntype LoggerFunction = (...messages: any[]) => void;\n\ninterface Logger {\n  trace: LoggerFunction;\n  debug: LoggerFunction;\n  info: LoggerFunction;\n  warn: LoggerFunction;\n  error: LoggerFunction;\n  setLevel: (level: DebugLevel) => void;\n}\n\nconst isBrowser = \"HTMLElement\" in globalThis;\n\n// @ts-expect-error import.meta.env exisit in vite.\nconst DEV = isBrowser ? import.meta.env.DEV : process.env.NODE_ENV === \"development\";\n\n// @ts-expect-error import.meta.env exisit in vite.\nconst PROD = isBrowser ? import.meta.PROD : process.env.NODE_ENV === \"production\";\n\nlet currentLevel: DebugLevel = DEV ? \"debug\" : \"info\";\n\nconst isWorker = \"HTMLRewriter\" in globalThis;\nconst supportsColor = !isWorker;\n\nexport const logger: Logger = {\n  trace: (...messages: any[]) => log(\"trace\", undefined, messages),\n  debug: (...messages: any[]) => log(\"debug\", undefined, messages),\n  info: (...messages: any[]) => log(\"info\", undefined, messages),\n  warn: (...messages: any[]) => log(\"warn\", undefined, messages),\n  error: (...messages: any[]) => log(\"error\", undefined, messages),\n  setLevel,\n};\n\nexport function createScopedLogger(scope: string): Logger {\n  return {\n    trace: (...messages: any[]) => log(\"trace\", scope, messages),\n    debug: (...messages: any[]) => log(\"debug\", scope, messages),\n    info: (...messages: any[]) => log(\"info\", scope, messages),\n    warn: (...messages: any[]) => log(\"warn\", scope, messages),\n    error: (...messages: any[]) => log(\"error\", scope, messages),\n    setLevel,\n  };\n}\n\nfunction setLevel(level: DebugLevel) {\n  if ((level === \"trace\" || level === \"debug\") && PROD) {\n    return;\n  }\n\n  currentLevel = level;\n}\n\nfunction log(level: DebugLevel, scope: string | undefined, messages: any[]) {\n  const levelOrder: DebugLevel[] = [\"trace\", \"debug\", \"info\", \"warn\", \"error\"];\n\n  if (levelOrder.indexOf(level) < levelOrder.indexOf(currentLevel)) {\n    return;\n  }\n\n  const allMessages = messages.reduce((accumulator, current) => {\n    if (accumulator.endsWith(\"\\n\")) {\n      return accumulator + current;\n    }\n\n    if (!accumulator) {\n      return current;\n    }\n\n    return `${accumulator} ${current}`;\n  }, \"\");\n\n  if (!supportsColor) {\n    console.log(`[${level.toUpperCase()}]`, allMessages);\n\n    return;\n  }\n\n  const labelBackgroundColor = getColorForLevel(level);\n  const labelTextColor = level === \"warn\" ? \"#000000\" : \"#FFFFFF\";\n\n  if (isBrowser) {\n    const labelStyles = getLabelStyles(labelBackgroundColor, labelTextColor);\n    const scopeStyles = getLabelStyles(\"#77828D\", \"#FFFFFF\");\n\n    const styles = [labelStyles];\n\n    if (typeof scope === \"string\") {\n      styles.push(\"\", scopeStyles);\n    }\n\n    console.log(`%c${level.toUpperCase()}${scope ? `%c %c${scope}` : \"\"}`, ...styles, allMessages);\n  } else {\n    const labelStyled = getStyledLabel(labelBackgroundColor, labelTextColor, level.toUpperCase());\n    const scopeStyled = getStyledLabel(\"#77828D\", \"white\", scope);\n\n    console.log(labelStyled, scopeStyled, allMessages);\n  }\n}\n\nfunction getLabelStyles(color: string, textColor: string) {\n  return `background-color: ${color}; color: white; border: 4px solid ${color}; color: ${textColor}; `;\n}\n\nfunction getStyledLabel(bgColor: string, textColor: string, text?: string) {\n  return text ? chalk.bgHex(bgColor).hex(textColor).bold(text) : \"\";\n}\n\nfunction getColorForLevel(level: DebugLevel): string {\n  switch (level) {\n    case \"trace\":\n    case \"debug\": {\n      return \"#77828D\";\n    }\n    case \"info\": {\n      return \"#1389FD\";\n    }\n    case \"warn\": {\n      return \"#FFDB6C\";\n    }\n    case \"error\": {\n      return \"#EE4744\";\n    }\n    default: {\n      return \"#000000\";\n    }\n  }\n}\n"]}